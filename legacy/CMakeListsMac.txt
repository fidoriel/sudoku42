#build instrucions for wxWidgets: ../configure --disable-shared --disable-sys-libs
#after compiling confirm: otool -L sudoku42.app/Contents/MacOS/sudoku42
cmake_minimum_required(VERSION 3.0)

set(CMAKE_BIULD_TYPE Debug)

project(sudoku42)

message("C Compiler: ${CMAKE_C_COMPILER}")
message("C Compiler ID: ${CMAKE_C_COMPILER_ID}")
message("C Compiler is GNU: ${CMAKE_COMPILER_IS_GNUC}")
message("C Compiler: ${CMAKE_CXX_COMPILER}")
message("C++ Compiler ID: ${CMAKE_CXX_COMPILER_ID}")
message("C++ Compiler is GNU: ${CMAKE_COMPILER_IS_GNUCXX}")

if(MSYS)
	# Tell find_package() where to look, via wxWidgets_ROOT_DIR…
	set(wxWidgets_ROOT_DIR "/home/lucak/wxWidgets-3.1.4")
    set(wxWidgets_CONFIG_EXECUTABLE "${wxWidgets_ROOT_DIR}/win32build/wx-config")
    set(CMAKE_CXX_FLAGS "-no-pie")
    message("Target: Windows32")
elseif(APPLE)
	set(wxWidgets_ROOT_DIR "/Users/lucakleinschmidt/wxWidgets-3.1.4")
	# Note, find_package() on OSX does not use wxWidgets_ROOT_DIR, use intermediate wx-config exe instead…
	set(wxWidgets_CONFIG_EXECUTABLE "${wxWidgets_ROOT_DIR}/macbuild/wx-config")
    message("Target: Apple")
elseif(CMAKE_SYSTEM_NAME STREQUAL "Linux")
    set(wxWidgets_ROOT_DIR "/home/luca/wxWidgets-3.1.4")
    set(wxWidgets_CONFIG_EXECUTABLE "${wxWidgets_ROOT_DIR}/gtkbuild/wx-config")
    set(CMAKE_CXX_FLAGS "-no-pie")
    message("Target: Linux")
endif()

find_package(wxWidgets COMPONENTS core base gl adv html xml xrc aui REQUIRED) # xrc needs adv

#if libs are static use --libs --static instead for standard libs.
set(WX_CONFIG_ARGS_LIBS "--libs --static")
set(WXWINDOWS_LIBRARIES "`${CMAKE_WXWINDOWS_WXCONFIG_EXECUTABLE} ${WX_CONFIG_ARGS_LIBS}`")

set(CMAKE_WXWINDOWS_CXX_FLAGS "`${CMAKE_WXWINDOWS_WXCONFIG_EXECUTABLE} --cxxflags`")

if(wxWidgets_FOUND)
	include("${wxWidgets_USE_FILE}")
	message("wxWidgets found!")
else(wxWidgets_FOUND)
	message("wxWidgets not found!")
endif(wxWidgets_FOUND)

# Define a variable containing a list of source files for the project
set(SRC_FILES
    GUIsudoku.cpp
    sudoku.cpp
    sudoku.h
    )

if(MSYS)
    # Include a RC file for windows
    #list(APPEND SRC_FILES sample.rc)
elseif(APPLE)
    # Add an icon for the apple .app file
    list(APPEND SRC_FILES AppIcon.icns)
endif()

# Define the build target for the executable
if(MSYS)
    add_executable(${PROJECT_NAME} WIN32 ${SRC_FILES})
elseif(APPLE)
    add_executable(${PROJECT_NAME} MACOSX_BUNDLE ${SRC_FILES})
elseif(CMAKE_SYSTEM_NAME STREQUAL "Linux")
    add_executable(${PROJECT_NAME} ${SRC_FILES})
endif()

# Link required libraries to the executable
target_link_libraries(${PROJECT_NAME} ${wxWidgets_LIBRARIES})

#After compilation processing

if(APPLE)
    set_target_properties(${PROJECT_NAME} PROPERTIES
        RESOURCE "AppIcon.icns"
        MACOSX_BUNDLE_ICON_FILE AppIcon.icns
        MACOSX_BUNDLE_COPYRIGHT "Copyright fidoriel 2020"
        MACOSX_BUNDLE_GUI_IDENTIFIER "sudoku42"
        )
    add_custom_command(
        TARGET sudoku42
        POST_BUILD
        COMMAND plutil -replace NSHighResolutionCapable -bool true sudoku42.app/Contents/Info.plist
        )
endif()
